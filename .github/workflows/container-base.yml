name: lotus-fvm-localnet-base

on:
  push:
    paths:
      - .github/workflows/container-base.yml
      - Dockerfile-base
      - lotus
      - go-jsonrpc
  repository_dispatch:
    types: [manual-run-base]
  workflow_dispatch: {}

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: jimpick/lotus-fvm-localnet-base

jobs:
  run-build-and-push-oci-image:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      actions: write
    outputs:
      digest: ${{ steps.fetch_digest.outputs.digest }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Log in to the Container registry
        uses: docker/login-action@v2.1.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: build-base
        run: make build-base

      - name: Tag Docker image
        run: docker image tag ${{ env.IMAGE_NAME }} ${{ env.REGISTRY}}/${{ env.IMAGE_NAME }}

      - name: Push Docker image
        run: docker image push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Fetch digest
        id: fetch_digest
        run: |
          # https://github.community/t/how-to-check-if-a-container-image-exists-on-ghcr/154836
          TOKEN=$(curl -s https://ghcr.io/token\?scope\="repository:${{ env.IMAGE_NAME }}:pull" | jq -r .token)
          # curl -I -H "Authorization: Bearer $TOKEN" https://ghcr.io/v2/${{ env.IMAGE_NAME }}/manifests/latest
          DIGEST=$(curl -s -I -H "Authorization: Bearer $TOKEN" https://ghcr.io/v2/${{ env.IMAGE_NAME }}/manifests/latest | sed -n 's/^docker-content-digest: //p')
          echo $DIGEST
          echo "digest=$DIGEST" >> $GITHUB_ENV

      - name: Update Dockerfile-ready
        run: |
          perl -pi -e "s#^FROM ghcr.io/jimpick/lotus-fvm-localnet-base.*#FROM ghcr.io/jimpick/lotus-fvm-localnet-base\@${{ env.digest }}#" Dockerfile-ready

      - name: Commit and push changes to Dockerfile-ready
        run: |
          set -euo pipefail
          set -x
          git config --global user.name 'update-image-hash'
          git config --global user.email 'nobody@jimpick.com'
          git status
          git add Dockerfile-ready
          if [ -n "$(git status --porcelain)" ]; then
            git commit -m 'Update lotus-fvm-localnet-base from action'
            git pull
            git push
          fi

      - name: Trigger -ready build
        run: |
          curl \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/jimpick/lotus-fvm-localnet/dispatches \
            -d '{"event_type":"manual-run-ready"}'

      - name: Outputs
        run: |
          echo digest: ${{ env.digest }}

